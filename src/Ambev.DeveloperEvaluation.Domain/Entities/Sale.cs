using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Ambev.DeveloperEvaluation.Domain.Entities;


/// <summary>
/// Represents a sale in the system .
/// This entity follows domain-driven design principles and includes business rules validation.
/// </summary>
public class Sale
{
    /// <summary>
    /// Gets the sales's id.
    /// Its generated by the database during its creation.
    /// </summary>
    [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]
    public long Id { get; set; }
    /// <summary>
    /// The identifier of the Client of the sale
    /// </summary>
    [Required]
    public long ClientId { get; set; }
    [Required]
    /// <summary>
    /// Navigation property to get Client full data
    /// </summary>
    public Client Client { get; set; }
    /// <summary>
    /// The identifier of the Branch of the sale
    /// </summary>
    [Required]
    public long BranchId { get; set; }
    /// <summary>
    /// Navigation property to get Branch full data
    /// </summary>
    [Required]
    public Branch Branch { get; set; }
    /// <summary>
    /// The list of itens of the sale
    /// </summary>
    [Required]
    public List<SalesProduct> SalesProducts { get; set; }
    /// <summary>
    /// The final price of the sale whes it was created
    /// </summary>
    [Required]
    public decimal SalesFinalPrice { get; set; }
    /// <summary>
    /// Gets the date and time when the user was created.
    /// </summary>
    public DateTime CreatedAt { get; set; }

    public Sale()
    {
        CreatedAt = DateTime.UtcNow;
    }

    public void SetFinalPrice()
    {
        SalesFinalPrice = (SalesProducts.Sum(x => x.Price));
    }


}